# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-02-21 10:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('management', '0009_v_company_people'),
        ('subscription', '0004_auto_20170125_1914'),
    ]

    operations = [
        migrations.CreateModel(
            name='v_last_compliance_service_action',
            fields=[
                ('csac_id', models.IntegerField(db_column='csac_id', primary_key=True, verbose_name='complianceserviceaction')),
                ('comp_name', models.CharField(db_column='comp_name', max_length=30, primary_key=True, serialize=False, verbose_name='name')),
                ('comp_phone', models.CharField(blank=True, db_column='comp_phone', max_length=20, null=True, verbose_name='phone')),
                ('comp_email', models.CharField(blank=True, db_column='comp_email', max_length=40, null=True, verbose_name='email')),
                ('csac_price_last', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True, verbose_name='lastprice')),
                ('csac_service_date_last', models.DateField(verbose_name='lastservicedate')),
                ('prsn_name', models.CharField(db_column='prsn_name', max_length=20, verbose_name='prsn_name')),
                ('prsn_email', models.CharField(blank=True, db_column='prsn_email', max_length=60, null=True, verbose_name='Person email')),
                ('prsn_mobile_phone', models.CharField(blank=True, db_column='prsn_mobile_phone', max_length=20, null=True, verbose_name='mobile phone')),
                ('prsn_office_phone', models.CharField(blank=True, db_column='prsn_office_phone', max_length=20, null=True, verbose_name='office phone')),
            ],
            options={
                'verbose_name': 'v_last_compliance_service_action',
                'db_table': 'v_last_compliance_service_action',
                'verbose_name_plural': 'v_last_compliance_service_action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='v_provider_jurisdiction',
            fields=[
                ('comp_name', models.CharField(db_column='comp_name', max_length=30, primary_key=True, serialize=False, verbose_name='name')),
                ('comp_phone', models.CharField(blank=True, db_column='comp_phone', max_length=20, null=True, verbose_name='phone')),
                ('comp_email', models.CharField(blank=True, db_column='comp_email', max_length=40, null=True, verbose_name='email')),
                ('ctyp_desc', models.CharField(db_column='ctyp_desc', max_length=60, verbose_name='Compliance')),
                ('cont_name', models.CharField(db_column='cont_name', max_length=60, verbose_name='Countyname')),
            ],
            options={
                'verbose_name': 'v_provider_jurisdiction',
                'db_table': 'v_provider_jurisdiction',
                'verbose_name_plural': 'v_provider_jurisdictions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='V_Service_jurisdiction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctry_name', models.CharField(db_column='ctry_name', max_length=60, verbose_name='Countryname')),
                ('stat_name', models.CharField(db_column='stat_name', max_length=60, verbose_name='Statename')),
                ('cont_name', models.CharField(db_column='cont_name', max_length=60, verbose_name='Countyname')),
                ('srvj_help_text', models.TextField(blank=True, null=True, verbose_name='helptext')),
            ],
            options={
                'verbose_name': 'V_Service_jurisdiction',
                'db_table': 'V_Service_jurisdiction',
                'verbose_name_plural': 'V_Service_jurisdiction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyServiceJurisdiction',
            fields=[
                ('csrj_id', models.AutoField(primary_key=True, serialize=False)),
                ('comp', models.ForeignKey(db_column='comp_id', default='1', on_delete=django.db.models.deletion.DO_NOTHING, to='subscription.Company', verbose_name='Company')),
            ],
            options={
                'verbose_name': 'CompanyServiceJurisdiction',
                'db_table': 'oh_company_service_jurisdiction',
                'verbose_name_plural': 'CompanyServiceJurisdictions',
            },
        ),
        migrations.CreateModel(
            name='ComplianceResponsibility',
            fields=[
                ('cres_id', models.AutoField(primary_key=True, serialize=False)),
                ('cres_is_active', models.CharField(max_length=1)),
                ('cres_note', models.TextField(blank=True, null=True)),
                ('cres_date', models.DateTimeField()),
                ('cprs_id_assigner', models.ForeignKey(db_column='cprs_id_assigner', default='2', on_delete=django.db.models.deletion.DO_NOTHING, related_name='cprs_id_assigner_res', to='subscription.CompanyPersonRole', verbose_name='Assigner')),
                ('cprs_id_responsible', models.ForeignKey(db_column='cprs_id_responsible', default='2', on_delete=django.db.models.deletion.DO_NOTHING, related_name='cprs_id_responsible', to='subscription.CompanyPersonRole', verbose_name='Responsible')),
            ],
            options={
                'verbose_name': 'ComplianceResponsibility',
                'db_table': 'oh_compliance_responsibility',
                'verbose_name_plural': 'ComplianceResponsibility',
            },
        ),
        migrations.CreateModel(
            name='ComplianceService',
            fields=[
                ('csrv_id', models.AutoField(primary_key=True, serialize=False)),
                ('csrv_alert_date', models.DateField(blank=True, null=True, verbose_name='alertdate')),
                ('csrv_due_date', models.DateField(verbose_name='duedate')),
                ('csrv_note', models.TextField(blank=True, null=True, verbose_name='note')),
                ('basi_code', models.ForeignKey(db_column='basi_code', default='ANNUAL', on_delete=django.db.models.deletion.DO_NOTHING, to='management.Basis', verbose_name='basis')),
            ],
            options={
                'verbose_name': 'complianceservice',
                'db_table': 'oh_compliance_service',
                'verbose_name_plural': 'complianceservices',
            },
        ),
        migrations.CreateModel(
            name='ComplianceServiceAction',
            fields=[
                ('csac_id', models.AutoField(primary_key=True, serialize=False)),
                ('csac_service_date', models.DateField(blank=True, null=True, verbose_name='servicedate')),
                ('csac_price', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True, verbose_name='price')),
                ('csac_note', models.TextField(blank=True, null=True, verbose_name='note')),
                ('csac_date', models.DateTimeField(verbose_name='date')),
                ('comp', models.ForeignKey(db_column='comp_id', default='', on_delete=django.db.models.deletion.DO_NOTHING, to='subscription.Company', verbose_name='company')),
                ('cprs_id', models.ForeignKey(blank=True, db_column='cprs_id', default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cprs_id_recorder', to='subscription.CompanyPersonRole', verbose_name='Recorded By')),
                ('csrv', models.ForeignKey(db_column='csrv_id', on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ComplianceService', verbose_name='complianceservice')),
            ],
            options={
                'verbose_name': 'complianceserviceaction',
                'db_table': 'oh_compliance_service_action',
                'verbose_name_plural': 'complianceserviceactions',
            },
        ),
        migrations.CreateModel(
            name='ComplianceServiceActionAtt',
            fields=[
                ('csaa_id', models.AutoField(primary_key=True, serialize=False)),
                ('csaa_title', models.CharField(max_length=60, verbose_name='title')),
                ('csaa_note', models.TextField(blank=True, null=True, verbose_name='note')),
                ('csaa_attachment', models.TextField(verbose_name='attachment')),
                ('csaa_date', models.DateTimeField(verbose_name='date')),
                ('csaa_file_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='filename')),
                ('atyp_code', models.ForeignKey(db_column='atyp_code', on_delete=django.db.models.deletion.DO_NOTHING, to='management.AttachmentType', verbose_name='attachmenttype')),
                ('csac', models.ForeignKey(db_column='csac_id', on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ComplianceServiceAction', verbose_name='complianceserviceaction')),
            ],
            options={
                'verbose_name': 'complianceserviceactionatt',
                'db_table': 'oh_compliance_service_action_att',
                'verbose_name_plural': 'complianceserviceactionatt',
            },
        ),
        migrations.CreateModel(
            name='ComplianceServiceAtt',
            fields=[
                ('csat_id', models.AutoField(primary_key=True, serialize=False)),
                ('csat_title', models.CharField(max_length=60, verbose_name='title')),
                ('csat_note', models.TextField(blank=True, null=True, verbose_name='note')),
                ('csat_attachment', models.TextField(verbose_name='attachment')),
                ('csat_date', models.DateTimeField(verbose_name='date')),
                ('csat_file_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='filename')),
                ('atyp_code', models.ForeignKey(db_column='atyp_code', on_delete=django.db.models.deletion.DO_NOTHING, to='management.AttachmentType', verbose_name='filename')),
                ('csrv', models.ForeignKey(db_column='csrv_id', on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ComplianceService', verbose_name='complianceservice')),
            ],
            options={
                'verbose_name': 'complianceserviceatt',
                'db_table': 'oh_compliance_service_att',
                'verbose_name_plural': 'complianceserviceatt',
            },
        ),
        migrations.CreateModel(
            name='ComplianceServiceSchedule',
            fields=[
                ('cssc_id', models.AutoField(primary_key=True, serialize=False)),
                ('cssc_service_date', models.DateTimeField(db_column='cssc_service_date', default=django.utils.timezone.now, verbose_name='Scheduled_Date')),
                ('cssc_note', models.TextField(blank=True, db_column='cssc_note', null=True, verbose_name='Note')),
                ('cssc_date', models.DateTimeField(db_column='cssc_date', default=django.utils.timezone.now, verbose_name='Date_Created')),
                ('comp', models.ForeignKey(db_column='comp_id', default='1', on_delete=django.db.models.deletion.DO_NOTHING, to='subscription.Company', verbose_name='company')),
                ('cprs_id_assigner', models.ForeignKey(db_column='cprs_id_assigner', default='2', on_delete=django.db.models.deletion.DO_NOTHING, related_name='cprs_id_assigner_scd', to='subscription.CompanyPersonRole', verbose_name='Assigner')),
                ('cprs_id_provider', models.ForeignKey(blank=True, db_column='cprs_id_provider', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='cprs_id_provider_scd', to='subscription.CompanyPersonRole', verbose_name='Provider')),
                ('cprs_id_responsible', models.ForeignKey(db_column='cprs_id_responsible', default='2', on_delete=django.db.models.deletion.DO_NOTHING, related_name='cprs_id_responsible_scd', to='subscription.CompanyPersonRole', verbose_name='Responsible')),
                ('csrv', models.ForeignKey(db_column='csrv_id', default='2', on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ComplianceService', verbose_name='ComplianceService')),
            ],
            options={
                'verbose_name': 'ComplianceServiceSchedule',
                'db_table': 'oh_compliance_service_schedule',
                'verbose_name_plural': 'ComplianceServiceSchedules',
            },
        ),
        migrations.CreateModel(
            name='ComplianceServiceType',
            fields=[
                ('ctyp_id', models.AutoField(primary_key=True, serialize=False)),
                ('ctyp_desc', models.CharField(max_length=60, verbose_name='description')),
                ('agen_code', models.ForeignKey(db_column='agen_code', on_delete=django.db.models.deletion.DO_NOTHING, to='management.Agency', verbose_name='agency')),
                ('basi_code', models.ForeignKey(db_column='basi_code', on_delete=django.db.models.deletion.DO_NOTHING, to='management.Basis', verbose_name='basis')),
            ],
            options={
                'verbose_name': 'complianceservicetype',
                'db_table': 'oh_compliance_service_type',
                'verbose_name_plural': 'complianceservicetypes',
            },
        ),
        migrations.CreateModel(
            name='Factor',
            fields=[
                ('fact_code', models.CharField(max_length=6, primary_key=True, serialize=False, verbose_name='code')),
                ('fact_desc', models.CharField(max_length=60, verbose_name='description')),
                ('ctyp', models.ForeignKey(db_column='ctyp_id', on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ComplianceServiceType', verbose_name='complianceservicetype')),
            ],
            options={
                'verbose_name': 'factor',
                'db_table': 'oh_factor',
                'verbose_name_plural': 'factors',
            },
        ),
        migrations.CreateModel(
            name='ProviderServicePerson',
            fields=[
                ('psvp_id', models.AutoField(primary_key=True, serialize=False)),
                ('cprs', models.ForeignKey(db_column='cprs_id', on_delete=django.db.models.deletion.DO_NOTHING, to='subscription.CompanyPersonRole', verbose_name='companyperson')),
                ('csac', models.ForeignKey(db_column='csac_id', on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ComplianceServiceAction', verbose_name='complianceserviceaction')),
            ],
            options={
                'verbose_name': 'ProviderServicePerson',
                'db_table': 'oh_provider_service_person',
                'verbose_name_plural': 'ProviderServicePerson',
            },
        ),
        migrations.CreateModel(
            name='ScheduleStatus',
            fields=[
                ('schs_code', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('schs_desc', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'schedulestatus',
                'db_table': 'oh_schedule_status',
                'verbose_name_plural': 'schedulestatus',
            },
        ),
        migrations.CreateModel(
            name='ServiceJurisdiction',
            fields=[
                ('srvj_id', models.AutoField(primary_key=True, serialize=False)),
                ('srvj_help_text', models.TextField(blank=True, null=True, verbose_name='helptext')),
                ('cont', models.ForeignKey(db_column='cont_id', default='1859', on_delete=django.db.models.deletion.DO_NOTHING, to='management.County', verbose_name='county')),
                ('ctyp', models.ForeignKey(db_column='ctyp_id', on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ComplianceServiceType', verbose_name='Service (Agency/Basis)')),
                ('govl_code', models.ForeignKey(db_column='govl_code', default='M', on_delete=django.db.models.deletion.DO_NOTHING, to='management.GovernmentLevel', verbose_name='govermentlevl')),
            ],
            options={
                'verbose_name': 'servicejurisdiction',
                'db_table': 'oh_service_jurisdiction',
                'verbose_name_plural': 'servicejurisdictions',
            },
        ),
        migrations.AddField(
            model_name='complianceserviceschedule',
            name='schs_code',
            field=models.ForeignKey(db_column='schs_code', default='PEND', on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ScheduleStatus'),
        ),
        migrations.AddField(
            model_name='complianceserviceaction',
            name='cssc',
            field=models.ForeignKey(blank=True, db_column='cssc_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ComplianceServiceSchedule', verbose_name='serviceschedule'),
        ),
        migrations.AddField(
            model_name='complianceserviceaction',
            name='fina',
            field=models.ForeignKey(blank=True, db_column='fina_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='management.Financing', verbose_name='Financing'),
        ),
        migrations.AddField(
            model_name='complianceservice',
            name='srvj',
            field=models.ForeignKey(db_column='srvj_id', on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ServiceJurisdiction', verbose_name='services / Jurisdiction / Level'),
        ),
        migrations.AddField(
            model_name='complianceservice',
            name='subs',
            field=models.ForeignKey(db_column='subs_id', on_delete=django.db.models.deletion.DO_NOTHING, to='subscription.Subscription', verbose_name='subscription'),
        ),
        migrations.AddField(
            model_name='complianceresponsibility',
            name='csrv',
            field=models.ForeignKey(db_column='csrv_id', on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ComplianceService'),
        ),
        migrations.AddField(
            model_name='companyservicejurisdiction',
            name='srvj',
            field=models.ForeignKey(db_column='srvj_id', default='1', on_delete=django.db.models.deletion.DO_NOTHING, to='compliance.ServiceJurisdiction', verbose_name='Jurisdiction'),
        ),
        migrations.AlterUniqueTogether(
            name='servicejurisdiction',
            unique_together=set([('ctyp', 'cont', 'govl_code')]),
        ),
    ]

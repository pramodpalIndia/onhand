# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-12-05 05:55
from __future__ import unicode_literals

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import onhand.users.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('management', '0001_initial'),
        # ('ohauth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_column='user_name', error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[onhand.users.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(db_column='user_is_staff', default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.CharField(db_column='user_is_active', default='Y', help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', max_length=1, verbose_name='active')),
                ('id', models.AutoField(db_column='user_id', default=1, primary_key=True, serialize=False)),
                ('password', models.CharField(db_column='user_password', max_length=2000, verbose_name='password')),
                ('user_security_question1', models.CharField(blank=True, max_length=60, null=True, verbose_name='question1')),
                ('user_security_answer1', models.CharField(blank=True, max_length=20, null=True, verbose_name='answer1')),
                ('user_security_question2', models.CharField(blank=True, max_length=60, null=True, verbose_name='question2')),
                ('user_security_answer2', models.CharField(blank=True, max_length=20, null=True, verbose_name='answer2')),
                ('user_security_question3', models.CharField(blank=True, max_length=60, null=True, verbose_name='question3')),
                ('user_security_answer3', models.CharField(blank=True, max_length=20, null=True, verbose_name='answer3')),
                ('user_last_logon_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='lastlogon')),
                ('user_password_change_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='passwordreset')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('role_code', models.ForeignKey(db_column='role_code', default='custom', on_delete=django.db.models.deletion.DO_NOTHING, to='management.Role', verbose_name='role')),
                ('cprs_id', models.ForeignKey(db_column='cprs_id', default=1,on_delete=django.db.models.deletion.DO_NOTHING, to='subscription.CompanyPersonRole', verbose_name='companypersonrole')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'db_table': 'oh_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
